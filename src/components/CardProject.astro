---
interface Props {
    id: string;
    title: string;
    description: string;
    tags: string[];
    github?: string;
    web?: string;
    urlImage: string;
}

const { title, description, tags, github, web, urlImage } = Astro.props;
---

<card-project
    class="bg-gray-800 rounded-md overflow-hidden max-w-md place-self-center relative h-fit min-h-[410px] border border-gray-600"
>
    <img src={urlImage} alt={title} class="object-cover aspect-video" />
    <div class="p-4 flex flex-col h-full justify-between">
        <h3 class="text-xl font-semibold text-indigo-400">{title}</h3>
        <p class="text-gray-400">
            {description}
        </p>
    </div>
    <span id="tags" class="space-x-1 absolute bottom-2 left-2"
        >{
            tags.map((val) => {
                return <span class="text-indigo-300">{val}</span>;
            })
        }</span
    >
    <div
        class="w-full h-full absolute bg-black/40 top-0 left-0 hidden items-center justify-around"
        data-links
    >
        {
            github !== undefined ? (
                <a
                    href={github}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="hover:text-blue-400  flex flex-col items-center cursor-pointer font-bold"
                >
                    {" "}
                    <i class="devicon-github-original text-7xl " />
                    GitHub
                </a>
            ) : (
                ""
            )
        }
        {
            web !== undefined ? (
                <a
                    href={web}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="hover:text-blue-400 flex flex-col items-center cursor-pointer font-bold"
                >
                    {" "}
                    <i class="devicon-chrome-plain text-7xl" />
                    Web
                </a>
            ) : (
                ""
            )
        }
    </div>
</card-project>

<script>
    class CardProject extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("mouseenter", () => {
                this.querySelector("[data-links]")?.classList.remove("hidden");
                this.querySelector("[data-links]")?.classList.add("flex");
            });
            this.addEventListener("mouseleave", () => {
                this.querySelector("[data-links]")?.classList.remove("flex");
                this.querySelector("[data-links]")?.classList.add("hidden");
            });
        }
    }
    customElements.define("card-project", CardProject);
</script>
